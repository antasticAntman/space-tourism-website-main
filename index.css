/* -------------------- */
/*Custom Properties*/
/* -------------------- */

:root {

    /* Colors */
    --clr-dark: 230 35% 7%;
    --clr-light: 231 77% 90%;
    --clr-white: 0 0% 100%;

    /* Font-Sizes */
    --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
    --fs-800:3.5rem ;
    --fs-700:1.5rem ;
    --fs-600:1rem ;
    --fs-500:1.75rem ;
    --fs-400:0.9375rem;
    --fs-300:1rem ;
    --fs-200:0.875rem ;

    /* -Notes
    ^ The font size system starts off as the base of 400,
     the systems goes as smaller the weight, 
     the smaller the letters, 
     so bolder you get, 
     bigger the number 

     I used rem for accessibility reasons. 
     If I were to use pixels, 
     I could potentially alter user settings put into place like if the user has a bigger font size for there vison. 
     We want to respect they're changes so use rem for font size!
    */

    /* font-families */

    --ff-serif: "Bellefair", serif;
    --ff-sans-cond: "Barlow Condensed", sans-serif;
    --ff-sans-norm: "Barlow", sans-serif;


}

@media (min-width: 35em){
    :root {
        --fs-900:9.375rem ;
        --fs-800: 5rem;
        --fs-700:2.5rem;
        --fs-600:1.5rem;
        --fs-400:1rem
    }
}

@media (min-width: 45em) {
    :root {
        --fs-800:6.25rem ;
        --fs-700:3.5rem ;
        --fs-600:2rem ;
        --fs-500:1.75rem ;
        --fs-400:1.125rem;
        --fs-300:1rem ;
        --fs-200:0.875rem ;
    }
}

/* -------------------- */
/*Reset*/
/* -------------------- */

/* credit: https://piccalil.li/blog/a-modern-css-reset/ */

/* Box Sizing */

*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset Margins */

body,
h1,
h2,
h3,
h4,
h5,
p,
figure,
picture {
    margin:0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-weight: 400;
}

/* set up the body */

body {
    line-height:1.5;
    min-height:100vh; 
    /* ^ Prevent weird incomplete small pages. 
        This Insures that the page that don't scroll are atleast the full vp height*/
    background-color: hsl(var(--clr-dark));
    color:hsl(var(--clr-white));
    font-family: var(--ff-sans-norm);
    font-size: var(--fs-400) ;

    display:grid;
    grid-template-rows: min-content 1fr;
}

/* Makes image easier to work with */

img,
picture {
    max-width:100%;
    /* ^ This insures that the image should start at max size and shrink as the vp shrinks*/
    display: block;
}

/* Make form elements easier to work with */

input,
button,
textarea,
select {
    font: inherit;
}

/* ^ This makes sure that the form elements inherits the parent font,
     bc by default, those elements do not inherit any parent attributes*/

     /* Removes animations for people who've turned them off */
     @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
        }
     }

/* -------------------- */
/*Utility Classes*/
/* -------------------- */

.flex {
    display:flex;
    gap: var(--gap, 1rem);
}

.grid {
    display:grid;
    gap: var(--gap, 1rem);
}

.d-block {
    display:block;
}

.flow > *:where(:not(:first-child)){  
    /* ^^ Looking for adjecient siblings that come before it 
    selector examples: 
    * + * (No Specificity)||
    (Has Specificity) *:not(:first-child) ||
    (No Specificity) *:where(:not(:first-child))
    
    //:where = Doesn't add specificity anywhere, everything gets none 

    //:is = Take the highest specificty selector and apply it to the entire rule
    */
    /* margin-top: 1rem; */
    margin-top: var(--flow-space, 1rem);
    outline:1px solid red
}

.container {
    padding-inline: 2em;
    margin-inline:auto;
    max-width: 80rem;
}

.grid-container {
    display: grid;
    border: 5px solid limegreen
}

@media (min-width: 45em) {
    .grid-container {
        column-gap: var(--container-gap, 2rem);
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0,30rem)) minmax(2rem, 1fr);
    }

    .grid-container > *:first-child {
        grid-column:2;
    }
    
    .grid-container > *:last-child {
        grid-column:3;
    }
}


.sr-only {
    position:absolute;
    width:1px;
    height:1px;
    padding:0;
    margin:-1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    white-space: nowrap;
    border:0;
}

/* colors */

.bg-dark { background-color:hsl(var(--clr-dark) );}
.bg-accent { background-color:hsl(var(--clr-light) );}
.bg-white { background-color:hsl(var(--clr-white) );}

.text-dark { color:hsl(var(--clr-dark) );}
.text-accent { color:hsl(var(--clr-light) );}
.text-white { color:hsl(var(--clr-white) );}

.example-component {
    background-color: hsl(var(--clr-light)/.5);
}

.color-border-1 {
    border:1px solid hsl(var(--clr-light));
}

.span-p-spacing {
    margin-right:2rem
}

/* Typography */

.ff-serif { font-family:var(--ff-serif);}
.ff-sans-cond{font-family:var(--ff-sans-cond);}
.ff-sans-norm{font-family:var(--ff-sans-norm);}

.letter-spacing-1 {
    letter-spacing: 4.75px;
}
.letter-spacing-2 {
    letter-spacing: 2.7px;
}
.letter-spacing-3 {
    letter-spacing: 2.35px;
}

.uppercase{text-transform: uppercase;}

.fs-900{ font-size: var(--fs-900);}
.fs-800{ font-size: var(--fs-800);}
.fs-700{ font-size: var(--fs-700);}
.fs-600{ font-size: var(--fs-600);}
.fs-500{ font-size: var(--fs-500);}
.fs-400{ font-size: var(--fs-400);}
.fs-300{ font-size: var(--fs-300);}
.fs-200{ font-size: var(--fs-200);}

.fs-900,
.fs-800,
.fs-700,
.fs-600{
    line-height: 1.1;
}

.numbered-title {
    font-family: var(--ff-sans-cond);
    font-size: var(--fs-500);
    text-transform: uppercase;
    letter-spacing: 4.72px;
}

.numbered-title > span {
    color:hsl(var(--clr-light)/.25);
    margin-right: .5em;
    font-weight: 700;
}

/* -------------------- */
/* Components           */
/* -------------------- */

.large-button {
    position: relative;
    z-index: 1;
    display: inline-grid;
    padding:0 2em;
    aspect-ratio: 1;
    place-items: center;
    border-radius: 50%;
    text-decoration: none;
    cursor:pointer;
}

.large-button::after{
    content: '';
    background: hsl(var(--clr-white) /.15);
    position: absolute;
    z-index: -1;
    width:100%;
    height:100%;
    border-radius: 50%;
    opacity: 0;
    transition:opacity 500ms linear, transform 750ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after{
    opacity: 1;
    transform:scale(1.5);
}

.primary-navigation{
    --gap:6rem;
    --underline-gap: 2rem;
    background-color: hsl(var(--clr-white) /.15);
    margin:0;
    padding:0;
    list-style: none;
    justify-content: center;
}

.primary-navigation a{
    text-decoration: none;
}

.primary-navigation a > span{
    font-weight: 700;
    margin-right:.5em;
}

.underline-indicator > * {
    padding: var(--underline-gap, 1rem);
    border:0;
    border-bottom: .2rem solid hsl(var(--clr-white) /0);
    cursor: pointer;
}

.underline-indicator >*:hover,
.underline-indicator >*:focus-visible {
    border-color:hsl(var(--clr-white)/.5);
    outline: none;  
}


.underline-indicator > .active,
.underline-indicator > [aria-selected="true"]
{
    color:hsl(var(--clr-white) / 1);
    border-color: hsl(var(--clr-white) / 1);
}

.tab-list{
 --gap:3rem;
}

.dot-indicators{
    margin:3rem;
    border:0;
}

.dot-indicators > *{
    /* border-radius: 50%; */
    aspect-ratio: 1;
    border-radius: 50%;
    background-color: hsl(var(--clr-light)/.25);
    padding:.5rem;
}

.dot-indicators > *:hover,
.dot-indicators > *:focus-visible
{
    background-color: hsl(var(--clr-white) /.60);
}

.dot-indicators > .active,
.dot-indicators > [aria-selected='true']
{
    background-color:hsl(var(--clr-white) )
}

.number-indicators {
margin:1rem;
}

.number-indicators {
    display: grid;
    place-items: center;
}

.number-indicators > * {
    display: flex;
    justify-content: center;
    align-items: center;
    width:50px;
    height: 50px;
    aspect-ratio: 1;
    border-radius: 50%;
    padding:2.25rem;
    margin-bottom:1rem;
    cursor: pointer;
    background-color: hsl(var(--clr-dark) );
    color:hsl(var(--clr-white) );
    outline: 0;
    border:2px solid hsl(var(--clr-light)/.25);
    /* outline:hsl(var(--clr-light)) */
}

.number-indicators > .active,
.number-indicators > [aria-selected='true']
{
    background-color: hsl(var(--clr-white));
    border-color: hsl(var(--clr-white) );
    color:black
}

.number-indicators > button:hover,
.number-indicators > button:focus       
{
 border:2px solid hsl(var(--clr-white));   
}

.number-indicators > button:focus{
    border:3px solid hsl(var(--clr-light)/.9)
}